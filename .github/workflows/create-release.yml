name: Create Release Assets

on:
  workflow_dispatch:
  workflow_call:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1.6.5
            
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      - uses: kaisugi/action-regex-match@v1.0.1
        id: regex-match
        with:
          text: ${{ github.ref }}
          regex: '(v*-pre*)'
          flags: gm

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.regex-match.outputs.match != '' }}
      
      - name: Set asset_name
        id: set_asset_name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "::set-output name=asset_tag::$TAG_NAME"

      - name: Upload APK Universal Asset
        id: upload-release-asset-universal-apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release-unsigned-signed.apk
          asset_name: pokey-universal-${{ steps.set_asset_name.outputs.asset_tag }}.apk
          asset_content_type: application/zip

      - name: Get Zap.Store latest release
        id: get-zap-store-release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/zapstore/zapstore-cli/releases/latest)
          TAG_NAME=$(echo $LATEST_RELEASE | jq -r .tag_name)
          echo "Latest release tag: $TAG_NAME"
          echo "::set-output name=zapstore_version::$TAG_NAME"

      - name: Publish to Zap.Store
        id: publish-zap-store
        run: |
          git clone https://github.com/zapstore/zapstore-cli.git
          cd zapstore-cli
          git fetch --tags
          git checkout ${{ steps.get-zap-store-release.outputs.zapstore_version }}
          dart pub get
          dart compile exe lib/main.dart -o build
          cd $GITHUB_WORKSPACE
          ./zapstore-cli/build publish pokey


          
